import{_ as t,c as a,o as d,a5 as e}from"./chunks/framework.BV-pm6eq.js";const b=JSON.parse('{"title":"08.修饰符","description":"","frontmatter":{"title":"08.修饰符","tags":["java"],"categories":["java"]},"headers":[],"relativePath":"java/01.java基础/08.修饰符.md","filePath":"java/01.java基础/08.修饰符.md","lastUpdated":1713496099000}'),l={name:"java/01.java基础/08.修饰符.md"},i=e('<h1 id="权限修饰符" tabindex="-1">权限修饰符 <a class="header-anchor" href="#权限修饰符" aria-label="Permalink to &quot;权限修饰符&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>在Java中提供了四种访问权限，使用不同的访问权限修饰符修饰时，被修饰的内容会有不同的访问权限，</p><ul><li>public ：公共的。</li><li>protected ：受保护</li><li>default ：默认的</li><li>private ：私有的</li></ul><h2 id="不同权限的访问能力" tabindex="-1">不同权限的访问能力 <a class="header-anchor" href="#不同权限的访问能力" aria-label="Permalink to &quot;不同权限的访问能力&quot;">​</a></h2><table><thead><tr><th></th><th>public</th><th>protected</th><th>default（空的）</th><th>private</th></tr></thead><tbody><tr><td>同一类中</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>同一包中(子类与无关类)</td><td>√</td><td>√</td><td>√</td><td></td></tr><tr><td>不同包的子类</td><td>√</td><td>√</td><td></td><td></td></tr><tr><td>不同包中的无关类</td><td>√</td><td></td><td></td><td></td></tr></tbody></table><p>可见，public具有最大权限。private则是最小权限。</p><p>编写代码时，如果没有特殊的考虑，建议这样使用权限：</p><ul><li>成员变量使用 private ，隐藏细节。</li><li>构造方法使用 public ，方便创建对象。</li><li>成员方法使用 public ，方便调用方法。</li></ul><div class="tip custom-block"><p class="custom-block-title">提示</p><p>不加权限修饰符，其访问能力与default修饰符相同</p></div>',10),r=[i];function o(c,s,p,h,_,n){return d(),a("div",null,r)}const v=t(l,[["render",o]]);export{b as __pageData,v as default};
