import{_ as a,o as l,c as i,R as e}from"./chunks/framework.SqDegG6f.js";const t="/blog/assets/进制转化.N2ySEven.png",o="/blog/assets/01.introduction-1702812799644.7nydwIUM.png",b=JSON.parse('{"title":"java前言","description":"","frontmatter":{"title":"java前言","tags":["java"],"category":"java"},"headers":[],"relativePath":"java/base/01.基础知识.md","filePath":"java/base/01.基础知识.md","lastUpdated":1703172910000}'),r={name:"java/base/01.基础知识.md"},n=e('<h1 id="开发前言" tabindex="-1">开发前言 <a class="header-anchor" href="#开发前言" aria-label="Permalink to &quot;开发前言&quot;">​</a></h1><h2 id="java-语言概述" tabindex="-1">Java 语言概述 <a class="header-anchor" href="#java-语言概述" aria-label="Permalink to &quot;Java 语言概述&quot;">​</a></h2><h3 id="什么是java语言" tabindex="-1">什么是Java语言 <a class="header-anchor" href="#什么是java语言" aria-label="Permalink to &quot;什么是Java语言&quot;">​</a></h3><p>Java语言是美国Sun公司（Stanford University Network），在1995年推出的高级的编程语言。所谓编程语言，是 计算机的语言，人们可以使用编程语言对计算机下达命令，让计算机完成人们需要的功能。</p><h3 id="java语言发展历史" tabindex="-1">Java语言发展历史 <a class="header-anchor" href="#java语言发展历史" aria-label="Permalink to &quot;Java语言发展历史&quot;">​</a></h3><ul><li><p>1995 年Sun公司发布Java1.0版本</p></li><li><p>1997 年发布Java 1.1版本</p></li><li><p>1998 年发布Java 1.2版本</p></li><li><p>2000 年发布Java 1.3版本</p></li><li><p>2002 年发布Java 1.4版本</p></li><li><p>2004 年发布Java 1.5版本</p></li><li><p>2006 年发布Java 1.6版本</p></li><li><p>2009 年Oracle甲骨文公司收购Sun公司，并于2011发布Java 1.7版本</p></li><li><p>2014 年发布Java 1.8版本</p></li><li><p>2017 年发布Java 9.0版本</p></li></ul><h3 id="java语言能做什么" tabindex="-1">Java语言能做什么 <a class="header-anchor" href="#java语言能做什么" aria-label="Permalink to &quot;Java语言能做什么&quot;">​</a></h3><p>Java语言主要应用在互联网程序的开发领域。常见的互联网程序比如天猫、京东、物流系统、网银系统等，以及服 务器后台处理大数据的存储、查询、数据挖掘等也有很多应用。</p><h2 id="计算机基础知识" tabindex="-1">计算机基础知识 <a class="header-anchor" href="#计算机基础知识" aria-label="Permalink to &quot;计算机基础知识&quot;">​</a></h2><p>计算机中的数据不同于人们生活中的数据，人们生活采用十进制数，而计算机中全部采用二进制数表示，它只包含 0、1两个数，逢二进一，1+1=10。每一个0或者每一个1，叫做一个bit（比特）。 下面了解一下十进制和二进制数据之间的转换计算</p><ul><li><p><strong>十进制数据转成二进制数据</strong>： 使用除以2获取余数的方式</p></li><li><p><strong>二进制数据转成十进制数据</strong>： 使用8421编码的方式 <img src="'+t+'" alt="进制转化"></p></li></ul><blockquote><p>小贴士： 二进制数系统中，每个0或1就是一个位，叫做bit（比特）</p></blockquote><h3 id="字节" tabindex="-1">字节 <a class="header-anchor" href="#字节" aria-label="Permalink to &quot;字节&quot;">​</a></h3><p>字节是我们常见的计算机中最小存储单元。计算机存储任何的数据，都是以字节的形式存储，右键点击文件属性， 我们可以查看文件的字节大小。 8个bit（二进制位） 0000-0000表示为1个字节，写成1 byte或者1 B。</p><ul><li>8 bit = 1 B</li><li>1024 B =1 KB</li><li>1024 KB =1 MB</li><li>1024 MB =1 GB</li><li>1024 GB = 1 TB</li></ul><h1 id="开发环境搭建" tabindex="-1">开发环境搭建 <a class="header-anchor" href="#开发环境搭建" aria-label="Permalink to &quot;开发环境搭建&quot;">​</a></h1><h2 id="java-虚拟机——jvm" tabindex="-1">Java 虚拟机——JVM <a class="header-anchor" href="#java-虚拟机——jvm" aria-label="Permalink to &quot;Java 虚拟机——JVM&quot;">​</a></h2><ul><li><p><strong>JVM （Java Virtual Machine ）</strong>：Java虚拟机，简称JVM，是运行所有Java程序的假想计算机，是Java程序的运行环境，是Java 最具吸引力的特性之一。我们编写的Java代码，都运行在 JVM 之上。</p></li><li><p><strong>跨平台</strong> ：任何软件的运行，都必须要运行在操作系统之上，而我们用Java编写的软件可以运行在任何的操作系统上，这个特性称为Java语言的跨平台特性。该特性是由JVM实现的，我们编写的程序运行在JVM上，JVM 运行在操作系统上。</p></li></ul><p><img src="'+o+'" alt="JVM作用"></p><p>如图所示，Java的虚拟机本身不具备跨平台功能的，每个操作系统下都有不同版本的虚拟机。</p><h2 id="java环境安装" tabindex="-1">java环境安装 <a class="header-anchor" href="#java环境安装" aria-label="Permalink to &quot;java环境安装&quot;">​</a></h2><p><a href="https://blog.csdn.net/qq_26552691/article/details/94598788" target="_blank" rel="noreferrer">Java/JDK下载安装与环境配置（Windows 10 超详细的图文版教程 ）</a></p><h2 id="入门程序说明" tabindex="-1">入门程序说明 <a class="header-anchor" href="#入门程序说明" aria-label="Permalink to &quot;入门程序说明&quot;">​</a></h2><h3 id="编译和运行是两回事" tabindex="-1">编译和运行是两回事 <a class="header-anchor" href="#编译和运行是两回事" aria-label="Permalink to &quot;编译和运行是两回事&quot;">​</a></h3><ul><li><strong>编译</strong> ：是指将我们编写的Java源文件翻译成JVM认识的class文件，在这个过程中， <code>javac</code> 编译器会检查我们 所写的程序是否有错误，有错误就会提示出来，如果没有错误就会编译成功。</li><li><strong>运行</strong> ：是指将 <code>class 文件</code> 交给JVM去运行，此时JVM就会去执行我们编写的程序了。</li></ul><h3 id="关于main方法" tabindex="-1">关于main方法 <a class="header-anchor" href="#关于main方法" aria-label="Permalink to &quot;关于main方法&quot;">​</a></h3><ul><li><strong>main 方法</strong>：称为主方法。写法是固定格式不可以更改。main方法是程序的入口点或起始点，无论我们编写多 少程序，JVM在运行的时候，都会从main方法这里开始执行。</li></ul><h2 id="添加注释comment" tabindex="-1">添加注释comment <a class="header-anchor" href="#添加注释comment" aria-label="Permalink to &quot;添加注释comment&quot;">​</a></h2><ul><li><strong>注释</strong> ：就是对代码的解释和说明。其目的是让人们能够更加轻松地了解代码。为代码添加注释，是十分必须要的，它不影响程序的编译和运行。</li><li>Java 中有单行注释和多行注释 <ul><li>单行注释以 // 开头 换行结束</li><li>多行注释以 /* 开头 以*/结束</li></ul></li></ul><h2 id="关键字keywords" tabindex="-1">关键字keywords <a class="header-anchor" href="#关键字keywords" aria-label="Permalink to &quot;关键字keywords&quot;">​</a></h2><ul><li><strong>关键字</strong> ：是指在程序中，Java已经定义好的单词，具有特殊含义 <ul><li>HelloWorld 案例中，出现的关键字有 <code>public</code> 、 <code>class</code> 、 <code>static</code> 、 <code>void</code> 等，这些单词已经被 Java定义好，全部都是小写字母，notepad++中颜色特殊。</li><li>关键字比较多，不能死记硬背，学到哪里记到哪里即可</li></ul></li></ul><h2 id="标识符" tabindex="-1">标识符 <a class="header-anchor" href="#标识符" aria-label="Permalink to &quot;标识符&quot;">​</a></h2><ul><li><strong>标识符</strong> ：是指在程序中，我们自己定义内容。比如类的名字、方法的名字和变量的名字等等，都是标识符。 <ul><li>HelloWorld 案例中，出现的标识符有类名字 <code>HelloWorld</code></li></ul></li><li><strong>命名规则</strong>：<em>硬性要求</em><ul><li>标识符可以包含 英文字母 26个(区分大小写) 、 0 -9数字 、 $ （美元符号） 和 _ （下划线） 。</li><li>标识符不能以数字开头。</li><li>标识符不能是关键字</li></ul></li><li><strong>命名规范</strong>： <em>软性建议</em><ul><li>类名规范：首字母大写，后面每个单词首字母大写（大驼峰式）。</li><li>方法名规范： 首字母小写，后面每个单词首字母大写（小驼峰式）。</li><li>变量名规范：全部小写。</li></ul></li></ul>',33),s=[n];function d(h,c,u,v,p,J){return l(),i("div",null,s)}const _=a(r,[["render",d]]);export{b as __pageData,_ as default};
