import{_ as i,E as a,c as n,J as p,w as l,a5 as e,o as t,a as h}from"./chunks/framework.BV-pm6eq.js";const k="/blog/assets/AbstractApplicationContext.DF-v3H0D.png",m=JSON.parse('{"title":"spring系列- BeanFactory和FactoryBean的区别","description":"","frontmatter":{"title":"spring系列- BeanFactory和FactoryBean的区别","tags":["spring"],"category":"spring"},"headers":[],"relativePath":"java/05.spring/30.BeanFactory和FactoryBean.md","filePath":"java/05.spring/30.BeanFactory和FactoryBean.md","lastUpdated":1721521553000}'),r={name:"java/05.spring/30.BeanFactory和FactoryBean.md"},E=e("",44);function g(d,c,y,F,b,o){const s=a("font");return t(),n("div",null,[p(s,{color:"green"},{default:l(()=>[h(" BeanFactory是spring中比较原始的Factory。如XMLBeanFactory就是一种典型的BeanFactory。原始的BeanFactory无法支持spring的许多插件，如AOP功能、Web应用等。 ApplicationContext接口,它由BeanFactory接口派生而来，ApplicationContext包含BeanFactory的所有功能，通常建议优先BeanFactory")]),_:1}),E])}const B=i(r,[["render",g]]);export{m as __pageData,B as default};
